
package com.ifernandez.proyectointegrador;

import com.ifernandez.proyectointegrador.PhotoCursor.Factory;
import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "Photo". Can be used for QueryBuilder and for referencing DB names.
 */
public final class Photo_ implements EntityInfo<Photo> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "Photo";

    public static final int __ENTITY_ID = 1;

    public static final Class<Photo> __ENTITY_CLASS = Photo.class;

    public static final String __DB_NAME = "Photo";

    public static final CursorFactory<Photo> __CURSOR_FACTORY = new Factory();

    @Internal
    static final PhotoIdGetter __ID_GETTER = new PhotoIdGetter();

    public final static Photo_ __INSTANCE = new Photo_();

    public final static io.objectbox.Property<Photo> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<Photo> data =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, byte[].class, "data");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<Photo>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        data
    };

    public final static io.objectbox.Property<Photo> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<Photo> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<Photo>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<Photo> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<Photo> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<Photo> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class PhotoIdGetter implements IdGetter<Photo> {
        @Override
        public long getId(Photo object) {
            return object.getId();
        }
    }

}
