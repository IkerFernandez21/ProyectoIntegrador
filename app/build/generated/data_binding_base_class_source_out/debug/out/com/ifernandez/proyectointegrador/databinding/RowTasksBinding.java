// Generated by view binder compiler. Do not edit!
package com.ifernandez.proyectointegrador.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.ifernandez.proyectointegrador.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowTasksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkboxRow;

  @NonNull
  public final ImageButton deleteRowButton;

  @NonNull
  public final EditText taskDescriptionRow;

  @NonNull
  public final EditText taskTittleRow;

  private RowTasksBinding(@NonNull LinearLayout rootView, @NonNull CheckBox checkboxRow,
      @NonNull ImageButton deleteRowButton, @NonNull EditText taskDescriptionRow,
      @NonNull EditText taskTittleRow) {
    this.rootView = rootView;
    this.checkboxRow = checkboxRow;
    this.deleteRowButton = deleteRowButton;
    this.taskDescriptionRow = taskDescriptionRow;
    this.taskTittleRow = taskTittleRow;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowTasksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowTasksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_tasks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowTasksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkboxRow;
      CheckBox checkboxRow = ViewBindings.findChildViewById(rootView, id);
      if (checkboxRow == null) {
        break missingId;
      }

      id = R.id.deleteRowButton;
      ImageButton deleteRowButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteRowButton == null) {
        break missingId;
      }

      id = R.id.task_description_row;
      EditText taskDescriptionRow = ViewBindings.findChildViewById(rootView, id);
      if (taskDescriptionRow == null) {
        break missingId;
      }

      id = R.id.task_tittle_row;
      EditText taskTittleRow = ViewBindings.findChildViewById(rootView, id);
      if (taskTittleRow == null) {
        break missingId;
      }

      return new RowTasksBinding((LinearLayout) rootView, checkboxRow, deleteRowButton,
          taskDescriptionRow, taskTittleRow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
