// Generated by view binder compiler. Do not edit!
package com.ifernandez.proyectointegrador.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.ifernandez.proyectointegrador.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomAppBar bottomAppBar;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final RecyclerView rvDayTasks;

  @NonNull
  public final TextView tvDay;

  @NonNull
  public final TextView tvYear;

  private ActivityDayBinding(@NonNull ConstraintLayout rootView, @NonNull BottomAppBar bottomAppBar,
      @NonNull CoordinatorLayout coordinator, @NonNull FloatingActionButton fab,
      @NonNull Guideline guideline2, @NonNull RecyclerView rvDayTasks, @NonNull TextView tvDay,
      @NonNull TextView tvYear) {
    this.rootView = rootView;
    this.bottomAppBar = bottomAppBar;
    this.coordinator = coordinator;
    this.fab = fab;
    this.guideline2 = guideline2;
    this.rvDayTasks = rvDayTasks;
    this.tvDay = tvDay;
    this.tvYear = tvYear;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_day, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottomAppBar;
      BottomAppBar bottomAppBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomAppBar == null) {
        break missingId;
      }

      id = R.id.coordinator;
      CoordinatorLayout coordinator = ViewBindings.findChildViewById(rootView, id);
      if (coordinator == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = ViewBindings.findChildViewById(rootView, id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.rv_day_tasks;
      RecyclerView rvDayTasks = ViewBindings.findChildViewById(rootView, id);
      if (rvDayTasks == null) {
        break missingId;
      }

      id = R.id.tv_day;
      TextView tvDay = ViewBindings.findChildViewById(rootView, id);
      if (tvDay == null) {
        break missingId;
      }

      id = R.id.tv_year;
      TextView tvYear = ViewBindings.findChildViewById(rootView, id);
      if (tvYear == null) {
        break missingId;
      }

      return new ActivityDayBinding((ConstraintLayout) rootView, bottomAppBar, coordinator, fab,
          guideline2, rvDayTasks, tvDay, tvYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
